
name: Workflow
on: [workflow_dispatch]
jobs:
    PrepareEnvJob:
        runs-on: ubuntu-latest
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config kaggle
            run: |
                mkdir -p ../../../.kaggle
                echo -e "{\"username\":\"nikitagrishchenkov\",\"key\":\"${{ secrets.KAGGLE_KEY }}\"}" >> ../../../.kaggle/kaggle.json
            shell: bash
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: validate storage
            run: python src/validate_storage.py "LastFM-artist-recommender"
    
    CheckDataUpdatesJob:
        runs-on: ubuntu-latest
        needs: PrepareEnvJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: check data updates
            run: python src/check_for_updates.py "LastFM-artist-recommender"
      
    ProcessDataJob:
        runs-on: ubuntu-latest
        needs: CheckDataUpdatesJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: process data
            run: python src/process_data.py "LastFM-artist-recommender"
    
    TrainingAlsJob:
        runs-on: ubuntu-latest
        needs: ProcessDataJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: train als
            run: python src/train.py "LastFM-artist-recommender" "implicit.als.AlternatingLeastSquares(factors=64)"
    EvalAlsJob:
        runs-on: ubuntu-latest
        needs: TrainingAlsJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: eval als
            run: python src/eval.py "LastFM-artist-recommender" "implicit.als.AlternatingLeastSquares(factors=64)"
    
    TrainingCosRecJob:
        runs-on: ubuntu-latest
        needs: EvalAlsJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: train cos_rec
            run: python src/train.py "LastFM-artist-recommender" "implicit.nearest_neighbours.CosineRecommender(K=200)"
    EvalCosRecJob:
        runs-on: ubuntu-latest
        needs: TrainingCosRecJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: eval cos_rec
            run: python src/eval.py "LastFM-artist-recommender" "implicit.nearest_neighbours.CosineRecommender(K=200)"
    
    SelectModelJob:
        runs-on: ubuntu-latest
        needs: EvalCosRecJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: config aws
            run: |
                mkdir -p ../../../.aws
                echo -e "[default]\n	region=ru-1" >> ../../../.aws/config
                echo -e "[default]\n	aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\n	aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ../../../.aws/credentials
            shell: bash
          - name: install requirements
            run: pip install -r requirements.txt
          - name: select best model
            run: python src/select_best_model.py "LastFM-artist-recommender"
    
    DeployModelJob:
        runs-on: ubuntu-latest
        needs: SelectModelJob
        steps:
          - name: checkout repo content
            uses: actions/checkout@v3
          - name: install requirements
            run: pip install -r requirements.txt
          - name: deploy best model
            run: python src/update_server.py
